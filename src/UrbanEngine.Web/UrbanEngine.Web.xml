<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UrbanEngine.Web</name>
    </assembly>
    <members>
        <member name="T:UrbanEngine.Web.Controllers.EventsController">
            <summary>
            manage and query information about events
            </summary>
        </member>
        <member name="M:UrbanEngine.Web.Controllers.EventsController.#ctor(MediatR.IMediator)">
            <summary>
            ctor
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:UrbanEngine.Web.Controllers.EventsController.GetEventByIdAsync(System.Int64)">
            <summary>
            get event for specified id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:UrbanEngine.Web.Controllers.EventsController.GetEventsAsync(UrbanEngine.Core.Messages.Events.GetEventsMessage)">
            <summary>
            retrieves a list of events based on specified filter
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:UrbanEngine.Web.Controllers.EventsController.CreateEventAsync(UrbanEngine.Core.Models.Events.EventDetailDto)">
            <summary>
            create a new event
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:UrbanEngine.Web.Controllers.EventsController.UpdateEventAsync(UrbanEngine.Core.Models.Events.EventDetailDto)">
            <summary>
            create a new event
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:UrbanEngine.Web.Controllers.EventsController.DeleteEventAsync(UrbanEngine.Core.Messages.Events.DeleteEventMessage)">
            <summary>
            delete a Event
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:UrbanEngine.Web.Controllers.EventVenuesController">
            <summary>
            manage and query information about event venues
            </summary>
        </member>
        <member name="M:UrbanEngine.Web.Controllers.EventVenuesController.#ctor(MediatR.IMediator)">
            <summary>
            ctor
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:UrbanEngine.Web.Controllers.EventVenuesController.GetVenueByIdAsync(System.Int64)">
            <summary>
            get event venue for specified id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:UrbanEngine.Web.Controllers.EventVenuesController.GetVenuesAsync(UrbanEngine.Core.Messages.Venues.GetVenuesMessage)">
            <summary>
            retrieves a list of event venues based on specified filter
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:UrbanEngine.Web.Controllers.EventVenuesController.CreateVenueAsync(UrbanEngine.Core.Models.Venues.EventVenueDetailDto)">
            <summary>
            create a new event venue
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:UrbanEngine.Web.Controllers.EventVenuesController.UpdateVenueAsync(UrbanEngine.Core.Models.Venues.EventVenueDetailDto)">
            <summary>
            create a new event venue
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:UrbanEngine.Web.Controllers.EventVenuesController.DeleteVenueAsync(UrbanEngine.Core.Messages.Venues.DeleteVenueMessage)">
            <summary>
            delete a venue
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
    </members>
</doc>
