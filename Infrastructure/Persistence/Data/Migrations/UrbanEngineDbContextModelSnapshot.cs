// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UrbanEngine.Infrastructure.Persistence.Data;

namespace UrbanEngine.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(UrbanEngineDbContext))]
    partial class UrbanEngineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ue")
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("UrbanEngine.Core.Application.Entities.ScheduleAggregate.Event", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("EndDate");

                    b.Property<int>("EventType");

                    b.Property<string>("OrganizerId");

                    b.Property<DateTime?>("StartDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long?>("VenueId");

                    b.HasKey("Id");

                    b.HasIndex("VenueId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("UrbanEngine.Core.Application.Entities.ScheduleAggregate.EventVenue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Venue");
                });

            modelBuilder.Entity("UrbanEngine.Core.Application.Entities.ScheduleAggregate.Event", b =>
                {
                    b.HasOne("UrbanEngine.Core.Application.Entities.ScheduleAggregate.EventVenue", "Venue")
                        .WithMany("Events")
                        .HasForeignKey("VenueId");
                });

            modelBuilder.Entity("UrbanEngine.Core.Application.Entities.ScheduleAggregate.EventVenue", b =>
                {
                    b.OwnsOne("UrbanEngine.Core.Application.Entities.Location", "Location", b1 =>
                        {
                            b1.Property<long>("EventVenueId");

                            b1.Property<string>("Address")
                                .HasColumnName("Address");

                            b1.Property<string>("Address2")
                                .HasColumnName("Address2");

                            b1.Property<string>("City")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .HasColumnName("Country");

                            b1.Property<string>("PostalCode")
                                .HasColumnName("PostalCode");

                            b1.Property<string>("State")
                                .HasColumnName("State");

                            b1.HasKey("EventVenueId");

                            b1.ToTable("Venue","ue");

                            b1.HasOne("UrbanEngine.Core.Application.Entities.ScheduleAggregate.EventVenue")
                                .WithOne("Location")
                                .HasForeignKey("UrbanEngine.Core.Application.Entities.Location", "EventVenueId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
